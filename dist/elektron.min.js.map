{"version":3,"sources":["../js/elektron.js"],"names":["elkSide","document","querySelector","showHide","window","innerWidth","elkSideNavOnoffCanvas","hide","show","changeElkSide","className","esi","getAttribute","checked","classList","add","remove","OnoffCanvas","hideByEsc","createDrawer","addEventListener","func","wait","immediate","timeout","args","context","timestamp","result","later","last","Date","now","setTimeout","apply","this","arguments","callNow","debounce","elkSideMM","MetisMenu","elkTopNav"],"mappings":";;;;;;;;uJAqDA,IAAMA,EAAUC,SAASC,cAAc,aAEvC,GAAgB,OAAZF,EAAkB,CAAA,IAMXG,EAAT,WACMC,OAAOC,WAAa,IACtBC,EAAsBC,OAEtBD,EAAsBE,QAWjBC,EAAT,WACE,IAAMC,EAAAA,MAAkBC,EAAIC,aAAa,QACrCD,EAAIE,QACNb,EAAQc,UAAUC,IAAIL,GAEtBV,EAAQc,UAAUE,OAAON,IAzBvBJ,EAAwB,IAAIW,YAAYjB,EAAS,CACrDkB,UAAad,OAAOC,WAAa,IACjCc,aAAgBf,OAAOC,WAAa,MAWtCF,IAEAC,OAAOgB,iBAAiB,SAtD1B,SAAkBC,EAAMC,EAAMC,GAC5B,IAAIC,EAASC,EAAMC,EAASC,EAAWC,EAKvC,SAASC,IACP,IAAIC,EAAOC,KAAKC,MAAQL,EAEpBG,EAAOR,GAAgB,GAARQ,EACjBN,EAAUS,WAAWJ,EAAOP,EAAOQ,IAEnCN,EAAU,KACLD,IACHK,EAASP,EAAKa,MAAMR,EAASD,GAC7BC,EAAUD,EAAO,OAKvB,OAlBa,OAATH,IACFA,EAAO,KAiBF,WACLI,EAAUS,KACVV,EAAOW,UACPT,EAAYI,KAAKC,MACjB,IAAIK,EAAUd,IAAcC,EAO5B,OANKA,IAASA,EAAUS,WAAWJ,EAAOP,IACtCe,IACFT,EAASP,EAAKa,MAAMR,EAASD,GAC7BC,EAAUD,EAAO,MAGZG,GAuByBU,CAASnC,EAAU,MAErD,IAAMQ,EAAMV,SAASC,cAAc,qBAWvB,OAARS,IACFF,IACAE,EAAIS,iBAAiB,SAAUX,IAGjC,IAAM8B,EAAYtC,SAASC,cAAc,4BACvB,OAAdqC,GACF,IAAIC,UAAUD,GAIlB,IAAME,EAAYxC,SAASC,cAAc,gBAEvB,OAAduC,IACF,IAAIxB,YAAY,eAAgB,CAC9BC,WAAa,EACbC,cAAgB,IACfX,OAEe,OAAdiC,GACF,IAAID,UAAUC,EAAUvC,cAAc","sourcesContent":["/* global OnoffCanvas, MetisMenu */\n\n/**\n * Returns a function, that, as long as it continues to be invoked, will not\n * be triggered. The function will be called after it stops being called for\n * N milliseconds. If `immediate` is passed, trigger the function on the\n * leading edge, instead of the trailing.\n * The function also has a property 'clear' that is a function which will clear\n * the timer to prevent previously scheduled executions.\n *\n * @source underscore.js\n * @see http://unscriptable.com/2009/03/20/debouncing-javascript-methods/\n * @param {Function} func to wrap\n * @param {Number} wait in ms (`250`)\n * @param {Boolean} immediate to execute at the beginning (`false`)\n */\n/* eslint-disable no-unused-vars */\nfunction debounce(func, wait, immediate) {\n  let timeout, args, context, timestamp, result;\n  if (wait === null) {\n    wait = 250;\n  }\n\n  function later() {\n    var last = Date.now() - timestamp;\n\n    if (last < wait && last >= 0) {\n      timeout = setTimeout(later, wait - last);\n    } else {\n      timeout = null;\n      if (!immediate) {\n        result = func.apply(context, args);\n        context = args = null;\n      }\n    }\n  }\n\n  return function () {\n    context = this;\n    args = arguments;\n    timestamp = Date.now();\n    var callNow = immediate && !timeout;\n    if (!timeout) timeout = setTimeout(later, wait);\n    if (callNow) {\n      result = func.apply(context, args);\n      context = args = null;\n    }\n\n    return result;\n  }\n}\n\n\nconst elkSide = document.querySelector('.elk-side');\n\nif (elkSide !== null) {\n  const elkSideNavOnoffCanvas = new OnoffCanvas(elkSide, {\n    'hideByEsc': window.innerWidth < 993 ? true : false,\n    'createDrawer': window.innerWidth < 993 ? true : false\n  });\n  /* eslint-disable-next-line no-inner-declarations */\n  function showHide() {\n    if (window.innerWidth < 993) {\n      elkSideNavOnoffCanvas.hide();\n    } else {\n      elkSideNavOnoffCanvas.show();\n    }\n  }\n\n  showHide();\n\n  window.addEventListener('resize', debounce(showHide, 250));\n\n  const esi = document.querySelector('.elk-switch-input');\n\n  /* eslint-disable-next-line no-inner-declarations */\n  function changeElkSide() {\n    const className = `is-${esi.getAttribute('name')}`;\n    if (esi.checked) {\n      elkSide.classList.add(className);\n    } else {\n      elkSide.classList.remove(className);\n    }\n  }\n  if (esi !== null) {\n    changeElkSide();\n    esi.addEventListener('change', changeElkSide);\n  }\n\n  const elkSideMM = document.querySelector('.elk-side-nav .metismenu');\n  if (elkSideMM !== null) {\n    new MetisMenu(elkSideMM);\n  }\n}\n\nconst elkTopNav = document.querySelector('.elk-top-nav');\n\nif (elkTopNav !== null) {\n  new OnoffCanvas('.elk-top-nav', {\n    'hideByEsc': false,\n    'createDrawer': false\n  }).show();\n\n  if (elkTopNav !== null) {\n    new MetisMenu(elkTopNav.querySelector('.metismenu'));\n  }\n}\n"]}